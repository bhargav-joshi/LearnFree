<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="utf-8">
  <meta content="width=device-width, initial-scale=1.0" name="viewport">

  <title>Learn Git</title>
  <meta content="" name="descriptison">
  <meta content="learn, free, learn free, tech, knowledge, learning opportunity, development, coding, programming,website, project" name="keywords">

  <!-- Favicons -->
  <link href="assets/img/favicon.png" rel="icon">
  <link href="assets/img/apple-touch-icon.png" rel="apple-touch-icon">

  <!-- Google Fonts -->
  <link href="https://fonts.googleapis.com/css?family=Open+Sans:300,300i,400,400i,600,600i,700,700i|Roboto:300,300i,400,400i,500,500i,600,600i,700,700i|Poppins:300,300i,400,400i,500,500i,600,600i,700,700i" rel="stylesheet">

  <!-- Vendor CSS Files -->
  <link href="assets/vendor/bootstrap/css/bootstrap.min.css" rel="stylesheet">
  <link href="assets/vendor/icofont/icofont.min.css" rel="stylesheet">
  <link href="assets/vendor/boxicons/css/boxicons.min.css" rel="stylesheet">
  <link href="assets/vendor/owl.carousel/assets/owl.carousel.min.css" rel="stylesheet">
  <link href="assets/vendor/venobox/venobox.css" rel="stylesheet">
  <link href="assets/vendor/aos/aos.css" rel="stylesheet">

  <!-- Template Main CSS File -->
  <link href="assets/css/style.css" rel="stylesheet">


</head>

<body>

  <!-- ======= Header ======= -->
  <header id="header" class="fixed-top header-inner-pages">
    <div class="container-fluid">

      <div class="row justify-content-center">
        <div class="col-xl-9 d-flex align-items-center">
          <h1 class="logo mr-auto"><a href="index.html">Learn Git</a></h1>
          <!-- Uncomment below if you prefer to use an image logo -->
          <!-- <a href="index.html" class="logo mr-auto"><img src="assets/img/logo.png" alt="" class="img-fluid"></a>-->

          <nav class="nav-menu d-none d-lg-block">
            <ul>
              <li><a href="index.html">Home</a></li>
             <!--  <li><a href="#about">About</a></li>
              <li><a href="#services">Services</a></li>
              <li><a href="#portfolio">Portfolio</a></li>
              <li><a href="#team">Team</a></li>
              <li class="drop-down"><a href="">Drop Down</a>
                <ul>
                  <li><a href="#">Drop Down 1</a></li>
                  <li class="drop-down"><a href="#">Deep Drop Down</a>
                    <ul>
                      <li><a href="#">Deep Drop Down 1</a></li>
                      <li><a href="#">Deep Drop Down 2</a></li>
                      <li><a href="#">Deep Drop Down 3</a></li>
                      <li><a href="#">Deep Drop Down 4</a></li>
                      <li><a href="#">Deep Drop Down 5</a></li>
                    </ul>
                  </li>
                  <li><a href="#">Drop Down 2</a></li>
                  <li><a href="#">Drop Down 3</a></li>
                  <li><a href="#">Drop Down 4</a></li>
                </ul>
              </li>
              <li><a href="#contact">Contact</a></li>-->

            </ul>
          </nav><!-- .nav-menu -->

          <a href="#about" class="get-started-btn scrollto">Get Started</a>
        </div>
      </div>

    </div>
  </header><!-- End Header -->

  <main id="main">

    <!-- ======= Breadcrumbs ======= -->
    <section class="breadcrumbs">
      <div class="container">

        <div class="d-flex justify-content-between align-items-center">
          <h2>Learn Git Page</h2>
          <ol>
            <li><a href="#">Home</a></li>
            <li>Learn Git Page</li>
          </ol>
        </div>

      </div>
    </section><!-- End Breadcrumbs -->

    <section class="inner-page">
      <div class="container">
        <h2>Multiset in C++ Standard Template Library (STL)</h2>
        <h3>Multisets are associative containers similar to set, with an added benefit of having multiple elements with same values.</h3>
        <h1>List of functions of Multiset: 
          <ol>
      
          begin() – Returns an iterator to the first element in the multiset.
          end() – Returns an iterator to the theoretical element that follows last element in the multiset.
          size() – Returns the number of elements in the multiset.
          max_size()– Returns the maximum number of elements that the multiset can hold.
          empty() – Returns whether the multiset is empty.
          pair insert(const g) – Adds a new element ‘g’ to the multiset.
          iterator insert (iterator position,const g) – Adds a new element ‘g’ at the position pointed by iterator.
          erase(iterator position)– Removes the element at the position pointed by the iterator.
          erase(const g)– Removes the value ‘g’ from the multiset.
          clear()– Removes all the elements from the multiset.
          key_comp() / value_comp()– Returns the object that determines how the elements in the multiset are ordered (‘<‘ by default).
          find(const g)– Returns an iterator to the element ‘g’ in the multiset if found, else returns the iterator to end.
          count(const g)– Returns the number of matches to element ‘g’ in the multiset.
          lower_bound(const g)– Returns an iterator to the first element that is equivalent to ‘g’ or definitely will not go before the element ‘g’ in the multiset if found, else returns the iterator to end.
          upper_bound(const g)– Returns an iterator to the first element that is equivalent to ‘g’ or definitely will go after the element ‘g’ in the multiset if found, else returns the iterator to end.
          multiset::swap()– This function is used to exchange the contents of two multisets but the sets must be of same type, although sizes may differ.
          multiset::operator=– This operator is used to assign new contents to the container by replacing the existing contents.
          multiset::emplace()– This function is used to insert a new element into the multiset container.
          multiset equal_range()– Returns an iterator of pairs. The pair refers to the range that includes all the elements in the container which have a key equivalent to k.
          multiset::emplace_hint() – Inserts a new element in the multiset.
          multiset::rbegin()– Returns a reverse iterator pointing to the last element in the multiset container.
          multiset::rend()– Returns a reverse iterator pointing to the theoretical element right before the first element in the multiset container.
          multiset::cbegin()– Returns a constant iterator pointing to the first element in the container.
          multiset::cend()– Returns a constant iterator pointing to the position past the last element in the container.
          multiset::crbegin()– Returns a constant reverse iterator pointing to the last element in the container.
          multiset::crend()– Returns a constant reverse iterator pointing to the position just before the first element in the container.
          multiset::get_allocator()– Returns a copy of the allocator object associated with the multiset.
          </ol>
        </h1>
        <p>
          #include <iostream>
            #include <set>
            #include <iterator>
            
            using namespace std;
            
            int main()
            {
              multiset <int, greater <int> > gquiz1;	
            
              gquiz1.insert(40);
              gquiz1.insert(30);
              gquiz1.insert(60);
              gquiz1.insert(20);
              gquiz1.insert(50);
              
              gquiz1.insert(50);
              gquiz1.insert(10);
            
              
              multiset <int, greater <int> > :: iterator itr;
              cout << "\nThe multiset gquiz1 is : \n";
              for (itr = gquiz1.begin(); itr
                != gquiz1.end(); ++itr)
              {
                cout << *itr << " ";
              }
              cout << endl;
            
              
              multiset <int> gquiz2(gquiz1.begin()
                        , gquiz1.end());
            
              
              cout << "\nThe multiset gquiz2 \n"
                  "after assign from gquiz1 is : \n";
              for (itr = gquiz2.begin(); itr
                != gquiz2.end(); ++itr)
              {
                cout << *itr <<" ";
              }
              cout << endl;
            
              
              cout << "\ngquiz2 after removal \n"
                  "of elements less than 30 : \n";
              gquiz2.erase(gquiz2.begin()
                    , gquiz2.find(30));
              for (itr = gquiz2.begin(); itr
                != gquiz2.end(); ++itr)
              {
                cout << *itr << " " ;
              }
            
              
              int num;
              num = gquiz2.erase(50);
              cout << "\ngquiz2.erase(50) : \n";
              cout << num << " removed \n" ;
              for (itr = gquiz2.begin(); itr
                != gquiz2.end(); ++itr)
              {
                cout << *itr << " ";
              }
            
              cout << endl;
            
              
              cout << "\ngquiz1.lower_bound(40) : \n"
                << *gquiz1.lower_bound(40) << endl;
              cout << "gquiz1.upper_bound(40) : \n"
                << *gquiz1.upper_bound(40) << endl;
            
              
              cout << "gquiz2.lower_bound(40) : \n"
                << *gquiz2.lower_bound(40) << endl;
              cout << "gquiz2.upper_bound(40) : \n"
                << *gquiz2.upper_bound(40) << endl;
                
                return 0;
            
            }
            
          }</p>        
      </div>
    </section>


  </main><!-- End #main -->

  <!-- ======= Footer ======= -->
  <footer id="footer">

    <div class="container">

      <div class="copyright-wrap d-md-flex py-4">
        <div class="mr-md-auto text-center text-md-left">
          <div class="copyright">
            &copy; Copyright <strong><span>Learn Free</span></strong>. All Rights Reserved
          </div>
          <div class="credits">
            <!-- All the links in the footer should remain intact. -->
            <!-- You can delete the links only if you purchased the pro version. -->
            <!-- Licensing information: https://bootstrapmade.com/license/ -->
            <!-- Purchase the pro version with working PHP/AJAX contact form: https://bootstrapmade.com/techie-free-skin-bootstrap-3/ -->
            Designed by <a href="https://bootstrapmade.com/">BootstrapMade</a>
          </div>
        </div>
        <div class="social-links text-center text-md-right pt-3 pt-md-0">
          <a href="#" class="twitter"><i class="bx bxl-twitter"></i></a>
          <a href="#" class="facebook"><i class="bx bxl-facebook"></i></a>
          <a href="#" class="instagram"><i class="bx bxl-instagram"></i></a>
          <a href="#" class="google-plus"><i class="bx bxl-skype"></i></a>
          <a href="#" class="linkedin"><i class="bx bxl-linkedin"></i></a>
          <a href="#" class="youtube"><i class="bxl-youtube"></i></a>
          <a href="#" class="reddit"><i class="bxl-reddit"></i></a>
        </div>
      </div>

    </div>
  </footer><!-- End Footer -->

  <a href="#" class="back-to-top"><i class="icofont-simple-up"></i></a>
  <div id="preloader"></div>

  <!-- Vendor JS Files -->
  <script src="assets/vendor/jquery/jquery.min.js"></script>
  <script src="assets/vendor/bootstrap/js/bootstrap.bundle.min.js"></script>
  <script src="assets/vendor/jquery.easing/jquery.easing.min.js"></script>
  <script src="assets/vendor/php-email-form/validate.js"></script>
  <script src="assets/vendor/waypoints/jquery.waypoints.min.js"></script>
  <script src="assets/vendor/counterup/counterup.min.js"></script>
  <script src="assets/vendor/owl.carousel/owl.carousel.min.js"></script>
  <script src="assets/vendor/isotope-layout/isotope.pkgd.min.js"></script>
  <script src="assets/vendor/venobox/venobox.min.js"></script>
  <script src="assets/vendor/aos/aos.js"></script>

  <!-- Template Main JS File -->
  <script src="assets/js/main.js"></script>

</body>

</html>
